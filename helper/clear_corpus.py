import osimport shutilimport pandas as pdimport psycopg2from psycopg2 import sqlfrom psycopg2.extensions import ISOLATION_LEVEL_AUTOCOMMIT# standalone script to clear out corpora. Run standalone directly from the helper/ directorydef clear_corpus(keep=[], remove=[]):    "clear out corpora from metadata/corpora_list.csv, corpora/ directory, and the vector_db table"    corpora_list = pd.read_csv("../metadata/corpora_list.csv")    db_info = pd.read_csv("../metadata/db_creds.csv")        # which corpora to remove    if len(keep) > 0:        remove_list = [x for x in corpora_list.name if x not in keep]    else:        remove_list = remove            # remove it from the corpora list csv    corpora_list.loc[lambda x: ~x.name.isin(remove_list), :].reset_index(drop=True).to_csv("../metadata/corpora_list.csv", index=False)        for removal in remove_list:        # remove the files from the corpora/ directory        os.remove(f"../corpora/metadata_{removal}.csv")        shutil.rmtree(f"../corpora/{removal}/")                # delete the table from the master vector_db        # establish connection        conn = psycopg2.connect(f"dbname=postgres user={db_info.loc[0, 'user']} password={db_info.loc[0, 'password']}")        conn.set_isolation_level(ISOLATION_LEVEL_AUTOCOMMIT)        cur = conn.cursor()            # drop target database if it already exists        cur.execute(sql.SQL("DROP DATABASE IF EXISTS {}").format(sql.Identifier(f"data_{removal}")))        conn.commit()                conn.close()        clear_corpus(    remove = [])